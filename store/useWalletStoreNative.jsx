import createStore from './createStore';

const useWalletStoreNative = createStore((get, set) => {
    return {
      ens: null,
      address: null,
      network: null,
      bnbWallet: {},
      onboard: null,
      notify: null,
      provider: null,
      readyToTransact: false,
      startBlock: 13656111,
      endBlock: 13915000,
      balanceRANDOM: 0,
      balanceETH: 0,
      balanceWETH: 0,
      balanceWBTC: 0,
      balanceLINK: 0,
      balanceUNI: 0,
      balanceDAI: 0,
      balanceUSDC: 0,
      balanceUSDT: 0,
      currentBlockNumber: 0,
      rpcNetwork: null,
      setBalanceRANDOM: (v) => set(({value, ...rest}) => ({ ...rest, balanceRANDOM: v })),
      setReadyToTransact: (v) => set(({value, ...rest}) => ({ ...rest, readyToTransact: v })),
      setRpcNetwork: (v) => set(({value, ...rest}) => ({ ...rest, rpcNetwork: v })),
      setCurrentBlockNumber: (v) => set(({value, ...rest}) => ({ ...rest, currentBlockNumber: v })),
      setEns: (v) => set(({value, ...rest}) => ({ ...rest, ens: v })),
      setAddress: (v) => set(({value, ...rest}) => ({ ...rest, address: v })),
      setNetwork: (v) => set(({value, ...rest}) => ({ ...rest, network: v })),
      setBnbWallet: (v) => set(({value, ...rest}) => ({ ...rest, bnbWallet: v })),
      setOnboard: (v) => set(({value, ...rest}) => ({ ...rest, onboard: v })),
      setNotify: (v) => set(({value, ...rest}) => ({ ...rest, notify: v })),
      setProvider: (v) => set(({value, ...rest}) => ({ ...rest, provider: v })),
      setStartBlock: (v) => set(({value, ...rest}) => ({ ...rest, startBlock: v })),
      setEndBlock: (v) => set(({value, ...rest}) => ({ ...rest, endBlock: v })),
      setBalanceETH: (v) => set(({value, ...rest}) => ({ ...rest, balanceETH: v })),
      setBalanceWETH: (v) => set(({value, ...rest}) => ({ ...rest, balanceWETH: v })),
      setBalanceWBTC: (v) => set(({value, ...rest}) => ({ ...rest, balanceWBTC: v })),
      setBalanceLINK: (v) => set(({value, ...rest}) => ({ ...rest, balanceLINK: v })),
      setBalanceUNI: (v) => set(({value, ...rest}) => ({ ...rest, balanceUNI: v })),
      setBalanceDAI: (v) => set(({value, ...rest}) => ({ ...rest, balanceDAI: v })),
      setBalanceUSDC: (v) => set(({value, ...rest}) => ({ ...rest, balanceUSDC: v })),
      setBalanceUSDT: (v) => set(({value, ...rest}) => ({ ...rest, balanceUSDT: v })),
    }
});

export default useWalletStoreNative;